//
// Generated by Microsoft (R) HLSL Shader Compiler 10.0.10011.16384
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float MaxGlobalDistance;           // Offset:    0 Size:     4 [unused]
//   float4 GlobalVolumeCenterAndExtent[4];// Offset:   16 Size:    64 [unused]
//   float4 GlobalVolumeWorldToUVAddAndMul[4];// Offset:   80 Size:    64 [unused]
//   float GlobalVolumeDimension;       // Offset:  144 Size:     4 [unused]
//   float GlobalVolumeTexelSize;       // Offset:  148 Size:     4 [unused]
//   uint EmitterTickCounter;           // Offset:  152 Size:     4
//   int4 EmitterSpawnInfoOffsets[2];   // Offset:  160 Size:    32
//   float4 EmitterSpawnInfoParams[8];  // Offset:  192 Size:   128
//   uint SpawnedInstances;             // Offset:  320 Size:     4
//   uint UpdateStartInstance;          // Offset:  324 Size:     4
//   int DefaultSimulationStageIndex;   // Offset:  328 Size:     4 [unused]
//   int SimulationStageIndex;          // Offset:  332 Size:     4 [unused]
//   int IterationInterfaceCount;       // Offset:  336 Size:     4 [unused]
//   uint ComponentBufferSizeRead;      // Offset:  340 Size:     4
//   uint ComponentBufferSizeWrite;     // Offset:  344 Size:     4
//   int NumEventsPerParticle;          // Offset:  348 Size:     4 [unused]
//   int NumParticlesPerEvent;          // Offset:  352 Size:     4 [unused]
//   uint CopyInstancesBeforeStart;     // Offset:  356 Size:     4 [unused]
//   uint SimStart;                     // Offset:  360 Size:     4 [unused]
//   uint ReadInstanceCountOffset;      // Offset:  364 Size:     4
//   uint WriteInstanceCountOffset;     // Offset:  368 Size:     4
//   float3 TilingAxes_Local_CurlNoiseForce_VectorField;// Offset:  372 Size:    12 [unused]
//   float3 Dimensions_Local_CurlNoiseForce_VectorField;// Offset:  384 Size:    12 [unused]
//   float3 MinBounds_Local_CurlNoiseForce_VectorField;// Offset:  400 Size:    12 [unused]
//   float3 MaxBounds_Local_CurlNoiseForce_VectorField;// Offset:  416 Size:    12 [unused]
//   float3 TilingAxes_Emitter_VectorField32;// Offset:  432 Size:    12 [unused]
//   float3 Dimensions_Emitter_VectorField32;// Offset:  448 Size:    12 [unused]
//   float3 MinBounds_Emitter_VectorField32;// Offset:  464 Size:    12
//   float3 MaxBounds_Emitter_VectorField32;// Offset:  480 Size:    12
//   float MinTime_Emitter_Value_ScaleFactor_FloatCurve;// Offset:  492 Size:     4
//   float MaxTime_Emitter_Value_ScaleFactor_FloatCurve;// Offset:  496 Size:     4 [unused]
//   float InvTimeRange_Emitter_Value_ScaleFactor_FloatCurve;// Offset:  500 Size:     4
//   float CurveLUTNumMinusOne_Emitter_Value_ScaleFactor_FloatCurve;// Offset:  504 Size:     4
//   float MinTime_Emitter_ScaleAlpha_FloatCurve;// Offset:  508 Size:     4
//   float MaxTime_Emitter_ScaleAlpha_FloatCurve;// Offset:  512 Size:     4 [unused]
//   float InvTimeRange_Emitter_ScaleAlpha_FloatCurve;// Offset:  516 Size:     4
//   float CurveLUTNumMinusOne_Emitter_ScaleAlpha_FloatCurve;// Offset:  520 Size:     4
//
// }
//
// cbuffer FNiagaraGlobalParameters
// {
//
//   float Engine_DeltaTime;            // Offset:    0 Size:     4
//   float Engine_InverseDeltaTime;     // Offset:    4 Size:     4
//   float Engine_Time;                 // Offset:    8 Size:     4
//   float Engine_RealTime;             // Offset:   12 Size:     4 [unused]
//
// }
//
// cbuffer FNiagaraEmitterParameters
// {
//
//   int Engine_Emitter_NumParticles;   // Offset:    0 Size:     4 [unused]
//   int Engine_Emitter_TotalSpawnedParticles;// Offset:    4 Size:     4
//   float Engine_Emitter_SpawnCountScale;// Offset:    8 Size:     4 [unused]
//   float Emitter_Age;                 // Offset:   12 Size:     4 [unused]
//   int Emitter_RandomSeed;            // Offset:   16 Size:     4
//   int Engine_Emitter_PaddingInt32_0; // Offset:   20 Size:     4 [unused]
//   int Engine_Emitter_PaddingInt32_1; // Offset:   24 Size:     4 [unused]
//   int Engine_Emitter_PaddingInt32_2; // Offset:   28 Size:     4 [unused]
//
// }
//
// cbuffer FNiagaraExternalParameters
// {
//
//   float Constants_Emitter_UniformRangedFloat004_Minimum;// Offset:    0 Size:     4
//   float Constants_Emitter_UniformRangedFloat004_Maximum;// Offset:    4 Size:     4
//   int Constants_Emitter_UniformRangedFloat004_RandomSeed;// Offset:    8 Size:     4 [unused]
//   float Constants_Emitter_UniformRangedFloat005_Minimum;// Offset:   12 Size:     4
//   float Constants_Emitter_UniformRangedFloat005_Maximum;// Offset:   16 Size:     4
//   int Constants_Emitter_UniformRangedFloat005_RandomSeed;// Offset:   20 Size:     4 [unused]
//   float Constants_Emitter_UniformRangedFloat002_Minimum;// Offset:   24 Size:     4
//   float Constants_Emitter_UniformRangedFloat002_Maximum;// Offset:   28 Size:     4
//   int Constants_Emitter_UniformRangedFloat002_RandomSeed;// Offset:   32 Size:     4 [unused]
//   float4 User_ParticleColor;         // Offset:   48 Size:    16
//   float Constants_Emitter_InitializeParticle_Mass;// Offset:   64 Size:     4 [unused]
//   float4 Constants_Emitter_InitializeParticle_MeshScale;// Offset:   80 Size:    16 [unused]
//   int Constants_Emitter_BoxLocation_RandomSeed;// Offset:   96 Size:     4 [unused]
//   float Constants_Emitter_BoxLocation_SurfaceOnlyBandThickness;// Offset:  100 Size:     4 [unused]
//   float4 Constants_Emitter_BoxLocation_BoxSize;// Offset:  112 Size:    16
//   float4 Constants_Emitter_BoxLocation_BoxOffset;// Offset:  128 Size:    16
//   float Constants_Emitter_BoxLocation_NormalizedBoxRotationAngle;// Offset:  144 Size:     4 [unused]
//   float4 Constants_Emitter_BoxLocation_RotateBoxOnAxis;// Offset:  160 Size:    16 [unused]
//   int Constants_Emitter_BoxLocation_SpawnGroupMask;// Offset:  176 Size:     4 [unused]
//   int Constants_Emitter_SphereLocation_RandomSeed;// Offset:  180 Size:     4 [unused]
//   float Constants_Emitter_SphereLocation_SurfaceOnlyBandThickness;// Offset:  184 Size:     4 [unused]
//   float Constants_Emitter_SphereLocation_SphereRadius;// Offset:  188 Size:     4
//   float4 Constants_Emitter_SphereLocation_NonUniformScale;// Offset:  192 Size:    16
//   float4 Constants_Emitter_SphereLocation_Offset;// Offset:  208 Size:    16
//   int Constants_Emitter_SphereLocation_SpawnGroupMask;// Offset:  224 Size:     4 [unused]
//   float4 Constants_Emitter_UniformRangedVector_Minimum;// Offset:  240 Size:    16
//   float4 Constants_Emitter_UniformRangedVector_Maximum;// Offset:  256 Size:    16
//   int Constants_Emitter_UniformRangedVector_RandomSeed;// Offset:  272 Size:     4 [unused]
//   float4 Constants_Emitter_AddVelocity_ScaleAddedVelocity;// Offset:  288 Size:    16
//   int Constants_Emitter_CurlNoiseForce_RandomSeed;// Offset:  304 Size:     4
//   float Constants_Emitter_CurlNoiseForce_NoiseFrequency;// Offset:  308 Size:     4
//   float4 Constants_Emitter_CurlNoiseForce_PanNoiseField;// Offset:  320 Size:    16
//   float Constants_Emitter_CurlNoiseForce_CurlNoiseConeMaskAngle;// Offset:  336 Size:     4 [unused]
//   float Constants_Emitter_CurlNoiseForce_CurlNoiseConeMaskFalloffAngle;// Offset:  340 Size:     4 [unused]
//   float Constants_Emitter_CurlNoiseForce_NoiseStrength;// Offset:  344 Size:     4
//   float Constants_Emitter_FloatFromCurve_ScaleCurve;// Offset:  348 Size:     4
//   float Constants_Emitter_FloatFromCurve001_ScaleCurve;// Offset:  352 Size:     4
//   float4 Constants_Emitter_ScaleColor_ScaleRGB;// Offset:  368 Size:    16 [unused]
//   float Constants_Emitter_SolveForcesAndVelocity_SpeedLimit;// Offset:  384 Size:     4 [unused]
//   float Constants_Emitter_SolveForcesAndVelocity_AccelerationLimit;// Offset:  388 Size:     4 [unused]
//   float Emitter_SpawnRate;           // Offset:  392 Size:     4 [unused]
//
// }
//
// cbuffer PREV_FNiagaraExternalParameters
// {
//
//   float PREV_Constants_Emitter_UniformRangedFloat004_Minimum;// Offset:    0 Size:     4 [unused]
//   float PREV_Constants_Emitter_UniformRangedFloat004_Maximum;// Offset:    4 Size:     4 [unused]
//   int PREV_Constants_Emitter_UniformRangedFloat004_RandomSeed;// Offset:    8 Size:     4 [unused]
//   float PREV_Constants_Emitter_UniformRangedFloat005_Minimum;// Offset:   12 Size:     4 [unused]
//   float PREV_Constants_Emitter_UniformRangedFloat005_Maximum;// Offset:   16 Size:     4 [unused]
//   int PREV_Constants_Emitter_UniformRangedFloat005_RandomSeed;// Offset:   20 Size:     4 [unused]
//   float PREV_Constants_Emitter_UniformRangedFloat002_Minimum;// Offset:   24 Size:     4 [unused]
//   float PREV_Constants_Emitter_UniformRangedFloat002_Maximum;// Offset:   28 Size:     4 [unused]
//   int PREV_Constants_Emitter_UniformRangedFloat002_RandomSeed;// Offset:   32 Size:     4 [unused]
//   float4 PREV_User_ParticleColor;    // Offset:   48 Size:    16
//   float PREV_Constants_Emitter_InitializeParticle_Mass;// Offset:   64 Size:     4 [unused]
//   float4 PREV_Constants_Emitter_InitializeParticle_MeshScale;// Offset:   80 Size:    16 [unused]
//   int PREV_Constants_Emitter_BoxLocation_RandomSeed;// Offset:   96 Size:     4 [unused]
//   float PREV_Constants_Emitter_BoxLocation_SurfaceOnlyBandThickness;// Offset:  100 Size:     4 [unused]
//   float4 PREV_Constants_Emitter_BoxLocation_BoxSize;// Offset:  112 Size:    16 [unused]
//   float4 PREV_Constants_Emitter_BoxLocation_BoxOffset;// Offset:  128 Size:    16 [unused]
//   float PREV_Constants_Emitter_BoxLocation_NormalizedBoxRotationAngle;// Offset:  144 Size:     4 [unused]
//   float4 PREV_Constants_Emitter_BoxLocation_RotateBoxOnAxis;// Offset:  160 Size:    16 [unused]
//   int PREV_Constants_Emitter_BoxLocation_SpawnGroupMask;// Offset:  176 Size:     4 [unused]
//   int PREV_Constants_Emitter_SphereLocation_RandomSeed;// Offset:  180 Size:     4 [unused]
//   float PREV_Constants_Emitter_SphereLocation_SurfaceOnlyBandThickness;// Offset:  184 Size:     4 [unused]
//   float PREV_Constants_Emitter_SphereLocation_SphereRadius;// Offset:  188 Size:     4 [unused]
//   float4 PREV_Constants_Emitter_SphereLocation_NonUniformScale;// Offset:  192 Size:    16 [unused]
//   float4 PREV_Constants_Emitter_SphereLocation_Offset;// Offset:  208 Size:    16 [unused]
//   int PREV_Constants_Emitter_SphereLocation_SpawnGroupMask;// Offset:  224 Size:     4 [unused]
//   float4 PREV_Constants_Emitter_UniformRangedVector_Minimum;// Offset:  240 Size:    16 [unused]
//   float4 PREV_Constants_Emitter_UniformRangedVector_Maximum;// Offset:  256 Size:    16 [unused]
//   int PREV_Constants_Emitter_UniformRangedVector_RandomSeed;// Offset:  272 Size:     4 [unused]
//   float4 PREV_Constants_Emitter_AddVelocity_ScaleAddedVelocity;// Offset:  288 Size:    16 [unused]
//   int PREV_Constants_Emitter_CurlNoiseForce_RandomSeed;// Offset:  304 Size:     4 [unused]
//   float PREV_Constants_Emitter_CurlNoiseForce_NoiseFrequency;// Offset:  308 Size:     4 [unused]
//   float4 PREV_Constants_Emitter_CurlNoiseForce_PanNoiseField;// Offset:  320 Size:    16 [unused]
//   float PREV_Constants_Emitter_CurlNoiseForce_CurlNoiseConeMaskAngle;// Offset:  336 Size:     4 [unused]
//   float PREV_Constants_Emitter_CurlNoiseForce_CurlNoiseConeMaskFalloffAngle;// Offset:  340 Size:     4 [unused]
//   float PREV_Constants_Emitter_CurlNoiseForce_NoiseStrength;// Offset:  344 Size:     4 [unused]
//   float PREV_Constants_Emitter_FloatFromCurve_ScaleCurve;// Offset:  348 Size:     4 [unused]
//   float PREV_Constants_Emitter_FloatFromCurve001_ScaleCurve;// Offset:  352 Size:     4 [unused]
//   float4 PREV_Constants_Emitter_ScaleColor_ScaleRGB;// Offset:  368 Size:    16 [unused]
//   float PREV_Constants_Emitter_SolveForcesAndVelocity_SpeedLimit;// Offset:  384 Size:     4 [unused]
//   float PREV_Constants_Emitter_SolveForcesAndVelocity_AccelerationLimit;// Offset:  388 Size:     4 [unused]
//   float PREV_Emitter_SpawnRate;      // Offset:  392 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// VectorFieldSampler_Emitter_VectorField32    sampler      NA          NA             s0      1 
// InputFloat                        texture   float         buf             t0      1 
// InputInt                          texture    sint         buf             t1      1 
// VectorFieldTexture_Emitter_VectorField32    texture  float4          3d             t2      1 
// CurveLUT_Emitter_Value_ScaleFactor_FloatCurve    texture   float         buf             t3      1 
// CurveLUT_Emitter_ScaleAlpha_FloatCurve    texture   float         buf             t4      1 
// RWOutputInt                           UAV    sint         buf             u0      1 
// RWOutputFloat                         UAV   float         buf             u1      1 
// RWInstanceCounts                      UAV    uint         buf             u2      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// FNiagaraGlobalParameters          cbuffer      NA          NA            cb1      1 
// FNiagaraEmitterParameters         cbuffer      NA          NA            cb2      1 
// FNiagaraExternalParameters        cbuffer      NA          NA            cb3      1 
// PREV_FNiagaraExternalParameters    cbuffer      NA          NA            cb4      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[33], dynamicIndexed
dcl_constantbuffer CB1[1], immediateIndexed
dcl_constantbuffer CB2[2], immediateIndexed
dcl_constantbuffer CB3[23], immediateIndexed
dcl_constantbuffer CB4[4], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_buffer (float,float,float,float) t0
dcl_resource_buffer (sint,sint,sint,sint) t1
dcl_resource_texture3d (float,float,float,float) t2
dcl_resource_buffer (float,float,float,float) t3
dcl_resource_buffer (float,float,float,float) t4
dcl_uav_typed_buffer (sint,sint,sint,sint) u0
dcl_uav_typed_buffer (float,float,float,float) u1
dcl_uav_typed_buffer (uint,uint,uint,uint) u2
dcl_input vThreadIDInGroup.x
dcl_input vThreadID.x
dcl_temps 14
dcl_tgsm_structured g0, 4, 32
dcl_tgsm_structured g1, 4, 8
dcl_tgsm_structured g2, 4, 2
dcl_tgsm_raw g3, 4
dcl_thread_group 32, 1, 1
iadd r0.x, vThreadID.x, cb0[20].y
ieq r0.y, cb0[22].w, l(-1)
ld_uav_typed_indexable(buffer)(uint,uint,uint,uint) r0.z, cb0[22].wwww, u2.yzxw
movc r0.y, r0.y, l(0), r0.z
iadd r0.z, r0.y, cb0[20].x
iadd r0.z, r0.z, cb0[20].y
ult r0.zw, r0.xxxx, r0.zzzy
and r0.w, r0.z, r0.w
if_nz r0.w
  ld_indexable(buffer)(float,float,float,float) r0.w, r0.xxxx, t0.yzwx
  imad r1.xyzw, l(5, 6, 7, 9), cb0[21].yyyy, r0.xxxx
  ld_indexable(buffer)(float,float,float,float) r2.x, r1.xxxx, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r2.y, r1.yyyy, t0.yxzw
  ld_indexable(buffer)(float,float,float,float) r2.z, r1.zzzz, t0.yzxw
  ishl r1.xy, cb0[21].yyyy, l(3, 4, 0, 0)
  iadd r1.xy, r0.xxxx, r1.xyxx
  ld_indexable(buffer)(float,float,float,float) r2.w, r1.xxxx, t0.yzwx
  ld_indexable(buffer)(float,float,float,float) r1.x, r1.wwww, t0.xzyw
  imad r3.xyzw, l(10, 11, 12, 13), cb0[21].yyyy, r0.xxxx
  ld_indexable(buffer)(float,float,float,float) r1.z, r3.xxxx, t0.yzxw
  ld_indexable(buffer)(float,float,float,float) r1.w, r3.yyyy, t0.yzwx
  ld_indexable(buffer)(float,float,float,float) r3.x, r3.zzzz, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r3.y, r3.wwww, t0.yxzw
  imad r4.xyzw, l(15, 17, 21, 22), cb0[21].yyyy, r0.xxxx
  ld_indexable(buffer)(float,float,float,float) r5.x, r4.xxxx, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r5.y, r1.yyyy, t0.yxzw
  ld_indexable(buffer)(float,float,float,float) r5.z, r4.yyyy, t0.yzxw
  ld_indexable(buffer)(float,float,float,float) r1.y, r4.zzzz, t0.yxzw
  ld_indexable(buffer)(float,float,float,float) r3.z, r4.wwww, t0.yzxw
  imad r4.xyzw, l(23, 24, 27, 28), cb0[21].yyyy, r0.xxxx
  ld_indexable(buffer)(float,float,float,float) r3.w, r4.xxxx, t0.yzwx
  ld_indexable(buffer)(float,float,float,float) r4.x, r4.yyyy, t0.xyzw
  ld_indexable(buffer)(sint,sint,sint,sint) r4.y, r0.xxxx, t1.yxzw
  ld_indexable(buffer)(float,float,float,float) r6.x, r4.zzzz, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r6.y, r4.wwww, t0.yxzw
  imad r4.z, l(29), cb0[21].y, r0.x
  ld_indexable(buffer)(float,float,float,float) r6.z, r4.zzzz, t0.yzxw
  add r0.w, r0.w, cb1[0].x
  max r4.z, r1.w, l(0.000010)
  add r4.w, r4.z, l(-0.000100)
  lt r4.w, r0.w, r4.w
  div r4.z, r0.w, r4.z
  mov r7.x, cb3[19].x
  mov r7.y, cb2[1].x
  imad r7.xy, r7.xyxx, l(0x0019660d, 0x0019660d, 0, 0), l(0x3c6ef35f, 0x3c6ef35f, 0, 0)
  imad r5.w, r7.y, l(0x3c88596c), r7.x
  imad r6.w, l(0x3c88596c), r5.w, r7.y
  imad r7.x, r5.w, r6.w, l(0x3c88596c)
  imad r5.w, r6.w, r7.x, r5.w
  ishr r5.w, r5.w, l(8)
  and r5.w, r5.w, l(0x00ffffff)
  utof r5.w, r5.w
  mad r7.xyz, r5.wwww, l(0.000244, 0.000244, 0.000244, 0.000000), r5.xyzx
  mul r8.xyz, cb1[0].zzzz, cb3[20].xyzx
  mad r7.xyz, r7.xyzx, cb3[19].yyyy, -r8.xyzx
  mad r7.xyz, r7.xyzx, l(125.000000, 125.000000, 125.000000, 0.000000), -cb0[29].xyzx
  add r8.xyz, -cb0[29].xyzx, cb0[30].xyzx
  div r7.xyz, r7.xyzx, r8.xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r7.xyz, r7.xyzx, t2.xyzw, s0, l(0.000000)
  mul r7.xyz, r7.xyzx, cb3[21].zzzz
  add r5.w, r4.z, -cb0[30].w
  mul_sat r5.w, r5.w, cb0[31].y
  mul r6.w, r5.w, cb0[31].z
  round_ni r6.w, r6.w
  lt r7.w, r6.w, cb0[31].z
  add r8.x, r6.w, l(1.000000)
  movc r7.w, r7.w, r8.x, r6.w
  mad r5.w, r5.w, cb0[31].z, -r6.w
  ftou r6.w, r6.w
  ld_indexable(buffer)(float,float,float,float) r6.w, r6.wwww, t3.yzwx
  ftou r7.w, r7.w
  ld_indexable(buffer)(float,float,float,float) r7.w, r7.wwww, t3.yzwx
  add r7.w, -r6.w, r7.w
  mad r5.w, r5.w, r7.w, r6.w
  mul r5.w, r5.w, cb3[21].w
  mul r8.xy, r5.wwww, r1.xzxx
  add r5.w, r4.z, -cb0[31].w
  mul_sat r5.w, r5.w, cb0[32].y
  mul r6.w, r5.w, cb0[32].z
  round_ni r6.w, r6.w
  lt r7.w, r6.w, cb0[32].z
  add r8.z, r6.w, l(1.000000)
  movc r7.w, r7.w, r8.z, r6.w
  mad r5.w, r5.w, cb0[32].z, -r6.w
  ftou r6.w, r6.w
  ld_indexable(buffer)(float,float,float,float) r6.w, r6.wwww, t4.yzwx
  ftou r7.w, r7.w
  ld_indexable(buffer)(float,float,float,float) r7.w, r7.wwww, t4.yzwx
  add r7.w, -r6.w, r7.w
  mad r5.w, r5.w, r7.w, r6.w
  mul r9.w, r5.w, cb3[22].x
  mov r9.xyz, l(1.000000,1.000000,1.000000,0)
  mul r9.xyzw, r9.xyzw, r2.xyzw
  max r5.w, r3.x, l(0.000100)
  div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r5.w
  mul r7.xyz, r7.xyzx, r5.wwww
  mad r6.xyz, r7.xyzx, cb1[0].xxxx, r6.xyzx
  mad r5.xyz, r6.xyzx, cb1[0].xxxx, r5.xyzx
  mov r5.w, r6.x
  mov r7.x, r6.z
  mov r6.xw, r6.xxxy
else 
  uge r7.y, r0.x, r0.y
  and r0.z, r0.z, r7.y
  if_nz r0.z
    iadd r0.x, -r0.y, r0.x
    ige r10.xyzw, r0.xxxx, cb0[10].xyzw
    and r10.xyzw, r10.xyzw, l(1, 1, 1, 1)
    iadd r0.y, r10.y, r10.x
    iadd r0.y, r10.z, r0.y
    iadd r0.y, r10.w, r0.y
    ige r10.xyzw, r0.xxxx, cb0[11].xyzw
    and r10.xyzw, r10.xyzw, l(1, 1, 1, 1)
    iadd r0.z, r10.y, r10.x
    iadd r0.z, r10.z, r0.z
    iadd r0.z, r10.w, r0.z
    iadd r0.y, r0.z, r0.y
    iadd r0.x, r0.x, -cb0[r0.y + 12].w
    iadd r4.y, r0.x, cb2[0].y
    itof r0.x, r0.x
    mad r0.x, cb0[r0.y + 12].x, r0.x, cb0[r0.y + 12].y
    add r0.w, -r0.x, cb1[0].x
    mul r0.x, r0.x, cb1[0].y
    add r10.xyzw, cb3[3].xyzw, -cb4[3].xyzw
    mad r2.xyzw, r0.xxxx, r10.xyzw, cb4[3].xyzw
    add r0.x, -cb3[0].x, cb3[0].y
    imul null, r10.x, vThreadID.x, l(0x0019660d)
    imul null, r10.y, cb0[9].z, l(0x0019660d)
    iadd r0.yz, r10.xxyx, l(0, 0x3c6ef35f, 0x3c6ef35f, 0)
    imad r10.xyzw, r0.yyyy, r0.yyyy, l(0x3c3c2745, 0x3c22c138, 0x3c095b2b, 0x3beff51e)
    imad r11.xyzw, r0.zzzz, r10.xyzw, r0.yyyy
    imad r12.xyzw, r10.xyzw, r11.xyzw, r0.zzzz
    imad r12.xyzw, r11.xyzw, r12.xyzw, r0.yyyy
    imad r10.xyzw, r11.xyzw, r12.xyzw, r10.xyzw
    ishr r10.xyzw, r10.xyzw, l(8, 8, 8, 8)
    and r10.xyzw, r10.xyzw, l(0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff)
    utof r10.xyzw, r10.xyzw
    mul r0.x, r0.x, r10.x
    mad r1.z, r0.x, l(0.000000), cb3[0].x
    add r0.x, -cb3[0].w, cb3[1].x
    mul r0.x, r0.x, r10.y
    mad r0.x, r0.x, l(0.000000), cb3[0].w
    add r7.y, -cb3[1].z, cb3[1].w
    mul r7.y, r7.y, r10.z
    mad r1.w, r7.y, l(0.000000), cb3[1].z
    mul r4.x, r0.x, l(360.000000)
    mul r3.y, r10.w, l(0.000000)
    imad r10.xyzw, r0.yyyy, r0.yyyy, l(0x3bd68f11, 0x3bbd2904, 0x3ba3c2f7, 0x3b8a5cea)
    imad r11.xyzw, r0.zzzz, r10.xyzw, r0.yyyy
    imad r12.xyzw, r10.xyzw, r11.xyzw, r0.zzzz
    imad r12.xyzw, r11.xyzw, r12.xyzw, r0.yyyy
    imad r10.xyzw, r11.xyzw, r12.xyzw, r10.xyzw
    ishr r10.xyzw, r10.xyzw, l(8, 8, 8, 8)
    and r10.xyzw, r10.xyzw, l(0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff)
    utof r10.xyzw, r10.xyzw
    mul r7.yzw, r10.xxyz, cb3[7].xxyz
    mul r7.yzw, r7.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
    mad r7.yzw, cb3[7].xxyz, l(0.000000, -0.500000, -0.500000, -0.500000), r7.yyzw
    add r7.yzw, r7.yyzw, cb3[8].xxyz
    mul r10.x, r10.w, l(0.000000)
    imad r11.xyzw, r0.yyyy, r0.yyyy, l(0x3b70f6dd, 0x3b5790d0, 0x3b3e2ac3, 0x3b24c4b6)
    imad r12.xyzw, r0.zzzz, r11.xyzw, r0.yyyy
    imad r13.xyzw, r11.xyzw, r12.xyzw, r0.zzzz
    imad r13.xyzw, r12.xyzw, r13.xyzw, r0.yyyy
    imad r11.xyzw, r12.xyzw, r13.xyzw, r11.xyzw
    ishr r11.xyzw, r11.xyzw, l(8, 8, 8, 8)
    and r11.xyzw, r11.xyzw, l(0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff)
    utof r11.xyzw, r11.xyzw
    mul r10.yz, r11.xxyx, l(0.000000, 0.000000, 0.000000, 0.000000)
    add r10.xyz, r10.xyzx, l(0.000000, -1.000000, 0.000000, 0.000000)
    sincos r0.x, r10.x, r10.x
    mad r8.z, -r10.y, r10.y, l(1.000000)
    sqrt r8.z, r8.z
    mul r12.x, r8.z, r10.x
    mul r12.y, r0.x, r8.z
    log r0.x, r10.z
    mul r0.x, r0.x, l(0.333333)
    exp r0.x, r0.x
    mov r12.z, r10.y
    mul r10.xyz, r0.xxxx, r12.xyzx
    mul r10.xyz, r10.xyzx, cb3[11].wwww
    add r7.yzw, r7.yyzw, cb3[13].xxyz
    mad r7.yzw, r10.xxyz, cb3[12].xxyz, r7.yyzw
    add r10.xyz, -cb3[15].xyzx, cb3[16].xyzx
    mul r8.zw, r10.xxxy, r11.zzzw
    mul r11.xy, r8.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
    imad r0.x, r0.y, r0.y, l(0x3b0b5ea9)
    imad r8.z, r0.z, r0.x, r0.y
    imad r0.z, r0.x, r8.z, r0.z
    imad r0.y, r8.z, r0.z, r0.y
    imad r0.x, r8.z, r0.y, r0.x
    ishr r0.x, r0.x, l(8)
    and r0.x, r0.x, l(0x00ffffff)
    utof r0.x, r0.x
    mul r0.x, r10.z, r0.x
    mul r11.z, r0.x, l(0.000000)
    add r0.xyz, r11.xyzx, cb3[15].xyzx
    mul r0.xyz, r0.xyzx, cb3[18].xyzx
    max r8.z, r1.w, l(0.000010)
    add r8.w, r8.z, l(-0.000100)
    lt r4.w, r0.w, r8.w
    div r4.z, r0.w, r8.z
    mov r10.x, cb3[19].x
    mov r10.y, cb2[1].x
    imad r8.zw, r10.xxxy, l(0, 0, 0x0019660d, 0x0019660d), l(0, 0, 0x3c6ef35f, 0x3c6ef35f)
    imad r8.z, r8.w, l(0x3d3a23c7), r8.z
    imad r8.w, l(0x3d3a23c7), r8.z, r8.w
    imad r10.x, r8.z, r8.w, l(0x3d3a23c7)
    imad r8.z, r8.w, r10.x, r8.z
    ishr r8.z, r8.z, l(8)
    and r8.z, r8.z, l(0x00ffffff)
    utof r8.z, r8.z
    mad r10.xyz, r8.zzzz, l(0.000244, 0.000244, 0.000244, 0.000000), r7.yzwy
    mul r11.xyz, cb1[0].zzzz, cb3[20].xyzx
    mad r10.xyz, r10.xyzx, cb3[19].yyyy, -r11.xyzx
    mad r10.xyz, r10.xyzx, l(125.000000, 125.000000, 125.000000, 0.000000), -cb0[29].xyzx
    add r11.xyz, -cb0[29].xyzx, cb0[30].xyzx
    div r10.xyz, r10.xyzx, r11.xyzx
    sample_l_indexable(texture3d)(float,float,float,float) r10.xyz, r10.xyzx, t2.xyzw, s0, l(0.000000)
    mul r10.xyz, r10.xyzx, cb3[21].zzzz
    add r8.z, r4.z, -cb0[30].w
    mul_sat r8.z, r8.z, cb0[31].y
    mul r8.w, r8.z, cb0[31].z
    round_ni r8.w, r8.w
    lt r10.w, r8.w, cb0[31].z
    add r11.x, r8.w, l(1.000000)
    movc r10.w, r10.w, r11.x, r8.w
    mad r8.z, r8.z, cb0[31].z, -r8.w
    ftou r8.w, r8.w
    ld_indexable(buffer)(float,float,float,float) r8.w, r8.wwww, t3.yzwx
    ftou r10.w, r10.w
    ld_indexable(buffer)(float,float,float,float) r10.w, r10.wwww, t3.yzwx
    add r10.w, -r8.w, r10.w
    mad r8.z, r8.z, r10.w, r8.w
    mul r8.z, r8.z, cb3[21].w
    mul r8.y, r1.z, r8.z
    add r8.z, r4.z, -cb0[31].w
    mul_sat r8.z, r8.z, cb0[32].y
    mul r8.w, r8.z, cb0[32].z
    round_ni r8.w, r8.w
    lt r10.w, r8.w, cb0[32].z
    add r11.x, r8.w, l(1.000000)
    movc r10.w, r10.w, r11.x, r8.w
    mad r8.z, r8.z, cb0[32].z, -r8.w
    ftou r8.w, r8.w
    ld_indexable(buffer)(float,float,float,float) r8.w, r8.wwww, t4.yzwx
    ftou r10.w, r10.w
    ld_indexable(buffer)(float,float,float,float) r10.w, r10.wwww, t4.yzwx
    add r10.w, -r8.w, r10.w
    mad r8.z, r8.z, r10.w, r8.w
    mul r11.w, r8.z, cb3[22].x
    mov r11.xyz, l(1.000000,1.000000,1.000000,0)
    mul r9.xyzw, r2.xyzw, r11.xyzw
    mad r6.xyz, r10.xyzx, r0.wwww, r0.xyzx
    mad r5.xyz, r6.xyzx, r0.wwww, r7.yzwy
    mov r1.x, r1.z
    mov r5.w, r6.x
    mov r7.x, r6.z
    mov r1.y, l(1.000000)
    mov r3.xzw, l(1.000000,0,1.000000,1.000000)
    mov r8.x, r8.y
    mov r6.xw, r6.xxxy
  else 
    mov r0.w, l(0)
    mov r9.xyzw, l(0,0,0,0)
    mov r2.xyzw, l(0,0,0,0)
    mov r5.xyzw, l(0,0,0,0)
    mov r7.x, l(0)
    mov r1.xyzw, l(0,0,0,0)
    mov r3.xyzw, l(0,0,0,0)
    mov r8.xy, l(0,0,0,0)
    mov r6.xyzw, l(0,0,0,0)
    mov r4.xyzw, l(0,0,0,0)
  endif 
endif 
and r0.x, r4.w, l(1)
store_structured g0.x, vThreadIDInGroup.x, l(0), r0.x
sync_g_t
and r0.yz, vThreadIDInGroup.xxxx, l(0, 3, 15, 0)
if_z r0.y
  iadd r7.yzw, vThreadIDInGroup.xxxx, l(0, 1, 2, 3)
  ld_structured r0.y, r7.y, l(0), g0.xxxx
  iadd r0.y, r0.y, r0.x
  ld_structured r8.z, r7.z, l(0), g0.xxxx
  iadd r8.z, r0.y, r8.z
  ld_structured r8.w, r7.w, l(0), g0.xxxx
  iadd r8.w, r8.w, r8.z
  store_structured g0.x, vThreadIDInGroup.x, l(0), l(0)
  store_structured g0.x, r7.y, l(0), r0.x
  store_structured g0.x, r7.z, l(0), r0.y
  store_structured g0.x, r7.w, l(0), r8.z
  ushr r0.x, vThreadIDInGroup.x, l(2)
  store_structured g1.x, r0.x, l(0), r8.w
endif 
sync_g_t
if_z r0.z
  ushr r0.x, vThreadIDInGroup.x, l(2)
  ld_structured r0.y, r0.x, l(0), g1.xxxx
  iadd r7.yzw, r0.xxxx, l(0, 1, 2, 3)
  ld_structured r0.z, r7.y, l(0), g1.xxxx
  iadd r0.z, r0.z, r0.y
  ld_structured r8.z, r7.z, l(0), g1.xxxx
  iadd r8.z, r0.z, r8.z
  ld_structured r8.w, r7.w, l(0), g1.xxxx
  iadd r8.w, r8.w, r8.z
  store_structured g1.x, r0.x, l(0), l(0)
  store_structured g1.x, r7.y, l(0), r0.y
  store_structured g1.x, r7.z, l(0), r0.z
  store_structured g1.x, r7.w, l(0), r8.z
  ushr r0.x, r0.x, l(2)
  store_structured g2.x, r0.x, l(0), r8.w
endif 
sync_g_t
if_z vThreadIDInGroup.x
  ld_structured r0.x, l(0), l(0), g2.xxxx
  ld_structured r0.y, l(1), l(0), g2.xxxx
  iadd r0.y, r0.y, r0.x
  store_structured g2.x, l(0), l(0), l(0)
  store_structured g2.x, l(1), l(0), r0.x
  imm_atomic_iadd r10.x, u2, cb0[23].x, r0.y
  store_raw g3.x, l(0), r10.x
endif 
sync_g_t
if_nz r4.w
  ld_raw r0.x, l(0), g3.xxxx
  ushr r0.yz, vThreadIDInGroup.xxxx, l(0, 4, 2, 0)
  ld_structured r0.y, r0.y, l(0), g2.xxxx
  iadd r0.x, r0.y, r0.x
  ld_structured r0.y, r0.z, l(0), g1.xxxx
  iadd r0.x, r0.y, r0.x
  ld_structured r0.y, vThreadIDInGroup.x, l(0), g0.xxxx
  iadd r0.x, r0.y, r0.x
  iadd r0.y, r0.x, cb0[20].y
  store_uav_typed u1.xyzw, r0.yyyy, r0.wwww
  iadd r0.z, r0.x, cb0[21].z
  iadd r0.z, r0.z, cb0[20].y
  store_uav_typed u1.xyzw, r0.zzzz, r9.xxxx
  ishl r10.xyzw, cb0[21].zzzz, l(1, 2, 3, 4)
  iadd r10.xyzw, r0.xxxx, r10.xyzw
  iadd r10.xyzw, r10.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r10.xxxx, r9.yyyy
  imad r11.xyzw, l(3, 5, 6, 7), cb0[21].zzzz, r0.xxxx
  iadd r11.xyzw, r11.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r11.xxxx, r9.zzzz
  store_uav_typed u1.xyzw, r10.yyyy, r9.wwww
  store_uav_typed u1.xyzw, r11.yyyy, r2.xxxx
  store_uav_typed u1.xyzw, r11.zzzz, r2.yyyy
  store_uav_typed u1.xyzw, r11.wwww, r2.zzzz
  store_uav_typed u1.xyzw, r10.zzzz, r2.wwww
  imad r2.xyzw, l(9, 10, 11, 12), cb0[21].zzzz, r0.xxxx
  iadd r2.xyzw, r2.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r2.xxxx, r1.xxxx
  store_uav_typed u1.xyzw, r2.yyyy, r1.zzzz
  store_uav_typed u1.xyzw, r2.zzzz, r1.wwww
  store_uav_typed u1.xyzw, r2.wwww, r3.xxxx
  imad r2.xyzw, l(13, 14, 15, 17), cb0[21].zzzz, r0.xxxx
  iadd r2.xyzw, r2.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r2.xxxx, r3.yyyy
  store_uav_typed u1.xyzw, r2.yyyy, r4.zzzz
  store_uav_typed u1.xyzw, r2.zzzz, r5.xxxx
  store_uav_typed u1.xyzw, r10.wwww, r5.yyyy
  store_uav_typed u1.xyzw, r2.wwww, r5.zzzz
  imad r2.xyzw, l(18, 19, 20, 21), cb0[21].zzzz, r0.xxxx
  iadd r2.xyzw, r2.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r2.xxxx, r5.wwww
  store_uav_typed u1.xyzw, r2.yyyy, r6.wwww
  store_uav_typed u1.xyzw, r2.zzzz, r7.xxxx
  store_uav_typed u1.xyzw, r2.wwww, r1.yyyy
  imad r1.xyzw, l(22, 23, 24, 25), cb0[21].zzzz, r0.xxxx
  iadd r1.xyzw, r1.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r1.xxxx, r3.zzzz
  store_uav_typed u1.xyzw, r1.yyyy, r3.wwww
  store_uav_typed u1.xyzw, r1.zzzz, r4.xxxx
  store_uav_typed u1.xyzw, r1.wwww, r8.xxxx
  imad r1.xyzw, l(26, 27, 28, 29), cb0[21].zzzz, r0.xxxx
  iadd r1.xyzw, r1.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r1.xxxx, r8.yyyy
  store_uav_typed u0.xyzw, r0.yyyy, r4.yyyy
  store_uav_typed u1.xyzw, r1.yyyy, r6.xxxx
  store_uav_typed u1.xyzw, r1.zzzz, r6.yyyy
  store_uav_typed u1.xyzw, r1.wwww, r6.zzzz
endif 
ret 
// Approximately 383 instruction slots used
